plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.5'
    id 'io.spring.dependency-management' version '1.1.3'
}

group = 'org.example'
version = '1.0-SNAPSHOT'

// Ensure consistent JAR naming
jar {
    archiveBaseName = 'adhyayan-sangha'
    archiveVersion = '1.0.0'
    enabled = false
}

bootJar {
    archiveBaseName = 'adhyayan-sangha'
    archiveVersion = '1.0.0'
}

java {
    sourceCompatibility = '17'
    targetCompatibility = '17'
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot dependencies
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // JSP Support
    implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'
    implementation 'jakarta.servlet.jsp.jstl:jakarta.servlet.jsp.jstl-api'
    implementation 'org.glassfish.web:jakarta.servlet.jsp.jstl'

    // JSF Support
    implementation 'org.glassfish:jakarta.faces:4.0.1'
    implementation 'org.primefaces:primefaces:12.0.0'

    // Database
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'org.postgresql:postgresql'

    // Password encryption
    implementation 'org.springframework.security:spring-security-crypto'

    // For AI integration
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    // JSON processing
    implementation 'com.fasterxml.jackson.core:jackson-databind'

    // Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
    useJUnitPlatform()
}
